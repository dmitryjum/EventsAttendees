# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
orbs:
  heroku: circleci/heroku@2.0.0
workflows:
  heroku_deploy:
    jobs:
      -build
      - heroku/deploy-via-git:
          requires:
            - build
          filters:
            branches:
              only: master
          post-steps:
          - run: rails db:migrate

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    # parallelism: 2 # run three instances of this job in parallel
    docker: # run the steps with Docker
      - image: cimg/ruby:3.2.1 # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: cimg/postgres:14.2 # database image
        environment: # environment variables for database, it is kind of obvious but it is important that they match with your test config in database.yml
          POSTGRES_DB: EventsAttendees_test
          POSTGRES_PASSWORD: ""
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run: ruby --version
      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v
      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - EventsAttendees-bundle-v2-{{ checksum "Gemfile.lock" }}
            - EventsAttendees-bundle-v2-
      - run: bundle update debug
      - run:
          name: Setup Bundle
          command: bundle install --full-index
      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: EventsAttendees-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace
      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs